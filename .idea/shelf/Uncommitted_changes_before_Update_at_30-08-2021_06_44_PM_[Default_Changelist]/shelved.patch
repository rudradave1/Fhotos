Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Hello World!\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ app/src/main/res/layout/activity_main.xml	(date 1630057159788)
@@ -6,13 +6,12 @@
     android:layout_height="match_parent"
     tools:context=".MainActivity">
 
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="Hello World!"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintLeft_toLeftOf="parent"
-        app:layout_constraintRight_toRightOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+    <androidx.fragment.app.FragmentContainerView
+        android:id="@+id/nav_host_fragment_main"
+        android:name="androidx.navigation.fragment.NavHostFragment"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:navGraph="@navigation/nav_graph"
+        app:defaultNavHost="true" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_error.xml
===================================================================
--- app/src/main/res/drawable/ic_error.xml	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ app/src/main/res/drawable/ic_error.xml	(revision 485363e59fec316de684da336291ab0aa02901a7)
@@ -1,10 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:tint="?attr/colorControlNormal"
-    android:viewportWidth="24"
-    android:viewportHeight="24">
-    <path
-        android:fillColor="@android:color/white"
-        android:pathData="M12,2C6.47,2 2,6.47 2,12s4.47,10 10,10 10,-4.47 10,-10S17.53,2 12,2zM17,15.59L15.59,17 12,13.41 8.41,17 7,15.59 10.59,12 7,8.41 8.41,7 12,10.59 15.59,7 17,8.41 13.41,12 17,15.59z" />
-</vector>
Index: app/src/main/java/com/codinginflow/imagesearchapp/MainActivity.kt
===================================================================
--- app/src/main/java/com/codinginflow/imagesearchapp/MainActivity.kt	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ app/src/main/java/com/codinginflow/imagesearchapp/MainActivity.kt	(revision 485363e59fec316de684da336291ab0aa02901a7)
@@ -1,11 +0,0 @@
-package com.codinginflow.imagesearchapp
-
-import androidx.appcompat.app.AppCompatActivity
-import android.os.Bundle
-
-class MainActivity : AppCompatActivity() {
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_main)
-    }
-}
\ No newline at end of file
Index: app/src/main/res/drawable/ic_search.xml
===================================================================
--- app/src/main/res/drawable/ic_search.xml	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ app/src/main/res/drawable/ic_search.xml	(revision 485363e59fec316de684da336291ab0aa02901a7)
@@ -1,10 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="24dp"
-    android:height="24dp"
-    android:tint="@android:color/white"
-    android:viewportWidth="24"
-    android:viewportHeight="24">
-    <path
-        android:fillColor="@android:color/white"
-        android:pathData="M15.5,14h-0.79l-0.28,-0.27C15.41,12.59 16,11.11 16,9.5 16,5.91 13.09,3 9.5,3S3,5.91 3,9.5 5.91,16 9.5,16c1.61,0 3.09,-0.59 4.23,-1.57l0.27,0.28v0.79l5,4.99L20.49,19l-4.99,-5zM9.5,14C7.01,14 5,11.99 5,9.5S7.01,5 9.5,5 14,7.01 14,9.5 11.99,14 9.5,14z" />
-</vector>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.codinginflow.imagesearchapp\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".MainActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ app/src/main/AndroidManifest.xml	(date 1630057159813)
@@ -1,15 +1,18 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.codinginflow.imagesearchapp">
+    package="com.rudra.imagesearchapp">
 
+    <uses-permission android:name="android.permission.INTERNET"/>
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
     <application
+        android:name="com.rudra.imagesearchapp.ImageSearchApplication"
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/AppTheme">
-        <activity android:name=".MainActivity">
+        <activity android:name="com.rudra.imagesearchapp.MainActivity">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
Index: app/src/main/java/com/rudra/imagesearchapp/data/UnsplashRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/data/UnsplashRepository.kt	(date 1630054772078)
+++ app/src/main/java/com/rudra/imagesearchapp/data/UnsplashRepository.kt	(date 1630054772078)
@@ -0,0 +1,21 @@
+package com.rudra.imagesearchapp.data
+
+import androidx.paging.Pager
+import androidx.paging.PagingConfig
+import androidx.paging.liveData
+import com.rudra.imagesearchapp.api.UnsplashApi
+import javax.inject.Inject
+import javax.inject.Singleton
+
+@Singleton
+class UnsplashRepository @Inject constructor(private val unsplashApi: UnsplashApi) {
+    fun getSearchResults (query: String) =
+        Pager (
+            config = PagingConfig(
+                pageSize = 20,
+                maxSize = 100,
+                enablePlaceholders = false
+            ),
+            pagingSourceFactory = { UnsplashPagingSource(unsplashApi, query) }
+        ).liveData
+}
\ No newline at end of file
Index: app/src/main/java/com/rudra/imagesearchapp/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/MainActivity.kt	(date 1630063720110)
+++ app/src/main/java/com/rudra/imagesearchapp/MainActivity.kt	(date 1630063720110)
@@ -0,0 +1,33 @@
+package com.rudra.imagesearchapp
+
+import androidx.appcompat.app.AppCompatActivity
+import android.os.Bundle
+import androidx.navigation.NavController
+import androidx.navigation.findNavController
+import androidx.navigation.fragment.NavHostFragment
+import androidx.navigation.fragment.findNavController
+import androidx.navigation.ui.AppBarConfiguration
+import androidx.navigation.ui.setupActionBarWithNavController
+import dagger.hilt.android.AndroidEntryPoint
+
+@AndroidEntryPoint
+class MainActivity : AppCompatActivity() {
+
+    private lateinit var navController: NavController
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_main)
+
+        val navHostFragment =
+            supportFragmentManager.findFragmentById(R.id.nav_host_fragment_main) as NavHostFragment
+        navController = navHostFragment.findNavController()
+
+        val appBarConfiguration = AppBarConfiguration(navController.graph)
+        setupActionBarWithNavController(navController, appBarConfiguration)
+    }
+
+    override fun onSupportNavigateUp(): Boolean {
+        return navController.navigateUp() || super.onSupportNavigateUp()
+    }
+}
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\napply plugin: 'kotlin-android-extensions'\r\napply plugin: 'kotlin-kapt'\r\napply plugin: \"androidx.navigation.safeargs.kotlin\"\r\napply plugin: 'dagger.hilt.android.plugin'\r\n\r\nandroid {\r\n    compileSdkVersion rootProject.compileSdkVersion\r\n    buildToolsVersion \"29.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.codinginflow.imagesearchapp\"\r\n        minSdkVersion rootProject.minSdkVersion\r\n        targetSdkVersion rootProject.targetSdkVersion\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n\r\n        buildConfigField(\"String\", \"UNSPLASH_ACCESS_KEY\", unsplash_access_key)\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    kotlinOptions {\r\n        jvmTarget = JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    // Default dependencies\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion\"\r\n    implementation \"androidx.core:core-ktx:$ktxVersion\"\r\n    implementation \"androidx.appcompat:appcompat:$appCompatVersion\"\r\n    implementation \"androidx.constraintlayout:constraintlayout:$constraintLayoutVersion\"\r\n    testImplementation \"junit:junit:$junitVersion\"\r\n    androidTestImplementation \"androidx.test.ext:junit:$testExtJunitVersion\"\r\n    androidTestImplementation \"androidx.test.espresso:espresso-core:$espressoVersion\"\r\n\r\n    // Navigation Component\r\n    implementation \"androidx.navigation:navigation-fragment-ktx:$navigationVersion\"\r\n    implementation \"androidx.navigation:navigation-ui-ktx:$navigationVersion\"\r\n\r\n    // Dagger Hilt\r\n    implementation \"com.google.dagger:hilt-android:$hiltVersion\"\r\n    kapt \"com.google.dagger:hilt-android-compiler:$hiltVersion\"\r\n    implementation \"androidx.hilt:hilt-lifecycle-viewmodel:$hiltAndroidXVersion\"\r\n    kapt \"androidx.hilt:hilt-compiler:$hiltAndroidXVersion\"\r\n\r\n    // Retrofit + GSON\r\n    implementation \"com.squareup.retrofit2:retrofit:$retrofitVersion\"\r\n    implementation \"com.squareup.retrofit2:converter-gson:$retrofitVersion\"\r\n\r\n    // Glide\r\n    implementation \"com.github.bumptech.glide:glide:$glideVersion\"\r\n\r\n    // Paging 3\r\n    implementation \"androidx.paging:paging-runtime:$pagingVersion\"\r\n}\r\n\r\nkapt {\r\n    correctErrorTypes true\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ app/build.gradle	(date 1630057160039)
@@ -31,7 +31,6 @@
     buildFeatures {
         viewBinding true
     }
-
     compileOptions {
         sourceCompatibility JavaVersion.VERSION_1_8
         targetCompatibility JavaVersion.VERSION_1_8
Index: app/src/main/java/com/rudra/imagesearchapp/ui/details/DetailsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/ui/details/DetailsFragment.kt	(date 1630063471483)
+++ app/src/main/java/com/rudra/imagesearchapp/ui/details/DetailsFragment.kt	(date 1630063471483)
@@ -0,0 +1,77 @@
+package com.rudra.imagesearchapp.ui.details
+
+import android.content.Intent
+import android.graphics.DrawFilter
+import android.graphics.drawable.Drawable
+import android.net.Uri
+import android.os.Bundle
+import android.view.View
+import androidx.core.view.isVisible
+import androidx.fragment.app.Fragment
+import androidx.navigation.fragment.navArgs
+import com.bumptech.glide.Glide
+import com.bumptech.glide.load.DataSource
+import com.bumptech.glide.load.engine.GlideException
+import com.bumptech.glide.request.RequestListener
+import com.bumptech.glide.request.target.Target
+import com.rudra.imagesearchapp.R
+import com.rudra.imagesearchapp.databinding.FragmentDetailsBinding
+import kotlinx.android.synthetic.main.fragment_gallery.*
+
+class DetailsFragment : Fragment(R.layout.fragment_details) {
+    private val args by navArgs<DetailsFragmentArgs>()
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        val binding = FragmentDetailsBinding.bind(view)
+
+        binding.apply {
+            val photo = args.photo
+
+            Glide.with(this@DetailsFragment)
+                .load(photo.urls.regular)
+                .error(R.drawable.ic_baseline_error_24)
+                .listener(object : RequestListener<Drawable>{
+                    override fun onLoadFailed(
+                        e: GlideException?,
+                        model: Any?,
+                        target: Target<Drawable>?,
+                        isFirstResource: Boolean
+                    ): Boolean {
+                        progressBar.isVisible = false
+
+                        return false
+                    }
+
+                    override fun onResourceReady(
+                        resource: Drawable?,
+                        model: Any?,
+                        target: Target<Drawable>?,
+                        dataSource: DataSource?,
+                        isFirstResource: Boolean
+                    ): Boolean {
+                        progressBar.isVisible = false
+                        textViewCreator .isVisible = true
+                        textViewDescription .isVisible = photo.description != null
+                        return false
+                    }
+
+                })
+                .into(imageView)
+
+            textViewDescription.text = photo.description
+
+            val uri = Uri.parse(photo.user.attributionUrl)
+            val intent = Intent(Intent.ACTION_VIEW, uri)
+
+            textViewCreator.apply {
+                text = "Photo by ${photo.user.name} On Unsplash"
+                setOnClickListener{
+                    context.startActivity(intent)
+                }
+                paint.isUnderlineText = true
+            }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/rudra/imagesearchapp/api/UnsplashApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/api/UnsplashApi.kt	(date 1630054772032)
+++ app/src/main/java/com/rudra/imagesearchapp/api/UnsplashApi.kt	(date 1630054772032)
@@ -0,0 +1,22 @@
+package com.rudra.imagesearchapp.api
+
+import com.rudra.imagesearchapp.BuildConfig
+import retrofit2.http.GET
+import retrofit2.http.Headers
+import retrofit2.http.Query
+
+interface UnsplashApi {
+
+    companion object{
+        const val BASE_URL = "https://api.unsplash.com/"
+        const val CLIENT_ID = BuildConfig.UNSPLASH_ACCESS_KEY
+    }
+
+    @Headers("Accept-version: v1", "Authorization: Client-ID $CLIENT_ID")
+    @GET("search/photos")
+    suspend fun searchPhotos(
+        @Query("query") query: String,
+        @Query("page") page: Int,
+        @Query("per_page") perPage:Int
+    ):UnsplashResponse
+}
\ No newline at end of file
Index: app/src/main/java/com/rudra/imagesearchapp/ui/gallery/UnsplashPhotoAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/ui/gallery/UnsplashPhotoAdapter.kt	(date 1630062617637)
+++ app/src/main/java/com/rudra/imagesearchapp/ui/gallery/UnsplashPhotoAdapter.kt	(date 1630062617637)
@@ -0,0 +1,75 @@
+package com.rudra.imagesearchapp.ui.gallery
+
+import android.view.LayoutInflater
+import android.view.OrientationEventListener
+import android.view.ViewGroup
+import androidx.paging.PagingDataAdapter
+import androidx.paging.PagingDataDiffer
+import androidx.recyclerview.widget.DiffUtil
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions
+import com.rudra.imagesearchapp.R
+import com.rudra.imagesearchapp.data.UnsplashPhoto
+import com.rudra.imagesearchapp.databinding.ItemUnsplashPhotoBinding
+
+class UnsplashPhotoAdapter(private val listener: OnItemClickListener) :
+    PagingDataAdapter<UnsplashPhoto, UnsplashPhotoAdapter.PhotoViewHolder>(PHOTO_COMPARATOR) {
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): PhotoViewHolder {
+        val binding =
+            ItemUnsplashPhotoBinding.inflate(LayoutInflater.from(parent.context), parent, false)
+
+        return PhotoViewHolder(binding)
+    }
+
+    override fun onBindViewHolder(holder: PhotoViewHolder, position: Int) {
+        val currentItem = getItem(position)
+
+        if (currentItem != null) {
+            holder.bind(currentItem)
+        }
+    }
+
+    inner class PhotoViewHolder(private val binding: ItemUnsplashPhotoBinding) :
+        RecyclerView.ViewHolder(binding.root) {
+
+        init {
+            binding.root.setOnClickListener {
+                val position = bindingAdapterPosition
+                if (position != RecyclerView.NO_POSITION) {
+                    val item = getItem(position)
+                    if (item != null) {
+                        listener.onItemClick(item)
+                    }
+                }
+            }
+        }
+        fun bind(photo: UnsplashPhoto) {
+            binding.apply {
+                Glide.with(itemView)
+                    .load(photo.urls.regular)
+                    .centerCrop()
+                    .transition(DrawableTransitionOptions.withCrossFade())
+                    .error(R.drawable.ic_baseline_error_24)
+                    .into(imageView)
+
+                textViewUserName.text = photo.user.username
+            }
+        }
+    }
+
+    interface OnItemClickListener{
+        fun onItemClick(photo: UnsplashPhoto)
+    }
+
+    companion object {
+        private val PHOTO_COMPARATOR = object : DiffUtil.ItemCallback<UnsplashPhoto>() {
+            override fun areItemsTheSame(oldItem: UnsplashPhoto, newItem: UnsplashPhoto) =
+                oldItem.id == newItem.id
+
+            override fun areContentsTheSame(oldItem: UnsplashPhoto, newItem: UnsplashPhoto) =
+                oldItem == newItem
+        }
+    }
+}
\ No newline at end of file
Index: .idea/codeStyles/Project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ProjectCodeStyleConfiguration\">\r\n  <code_scheme name=\"Project\" version=\"173\">\r\n    <JetCodeStyleSettings>\r\n      <option name=\"PACKAGES_TO_USE_STAR_IMPORTS\">\r\n        <value>\r\n          <package name=\"java.util\" alias=\"false\" withSubpackages=\"false\" />\r\n          <package name=\"kotlinx.android.synthetic\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"io.ktor\" alias=\"false\" withSubpackages=\"true\" />\r\n        </value>\r\n      </option>\r\n      <option name=\"PACKAGES_IMPORT_LAYOUT\">\r\n        <value>\r\n          <package name=\"\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"java\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"javax\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"kotlin\" alias=\"false\" withSubpackages=\"true\" />\r\n          <package name=\"\" alias=\"true\" withSubpackages=\"true\" />\r\n        </value>\r\n      </option>\r\n      <option name=\"CODE_STYLE_DEFAULTS\" value=\"KOTLIN_OFFICIAL\" />\r\n    </JetCodeStyleSettings>\r\n    <codeStyleSettings language=\"XML\">\r\n      <indentOptions>\r\n        <option name=\"CONTINUATION_INDENT_SIZE\" value=\"4\" />\r\n      </indentOptions>\r\n      <arrangement>\r\n        <rules>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>xmlns:android</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>xmlns:.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*:id</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*:name</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>name</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>style</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>^$</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>ANDROID_ATTRIBUTE_ORDER</order>\r\n            </rule>\r\n          </section>\r\n          <section>\r\n            <rule>\r\n              <match>\r\n                <AND>\r\n                  <NAME>.*</NAME>\r\n                  <XML_ATTRIBUTE />\r\n                  <XML_NAMESPACE>.*</XML_NAMESPACE>\r\n                </AND>\r\n              </match>\r\n              <order>BY_NAME</order>\r\n            </rule>\r\n          </section>\r\n        </rules>\r\n      </arrangement>\r\n    </codeStyleSettings>\r\n    <codeStyleSettings language=\"kotlin\">\r\n      <option name=\"CODE_STYLE_DEFAULTS\" value=\"KOTLIN_OFFICIAL\" />\r\n    </codeStyleSettings>\r\n  </code_scheme>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/codeStyles/Project.xml	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ .idea/codeStyles/Project.xml	(date 1630057159805)
@@ -1,22 +1,6 @@
 <component name="ProjectCodeStyleConfiguration">
   <code_scheme name="Project" version="173">
     <JetCodeStyleSettings>
-      <option name="PACKAGES_TO_USE_STAR_IMPORTS">
-        <value>
-          <package name="java.util" alias="false" withSubpackages="false" />
-          <package name="kotlinx.android.synthetic" alias="false" withSubpackages="true" />
-          <package name="io.ktor" alias="false" withSubpackages="true" />
-        </value>
-      </option>
-      <option name="PACKAGES_IMPORT_LAYOUT">
-        <value>
-          <package name="" alias="false" withSubpackages="true" />
-          <package name="java" alias="false" withSubpackages="true" />
-          <package name="javax" alias="false" withSubpackages="true" />
-          <package name="kotlin" alias="false" withSubpackages="true" />
-          <package name="" alias="true" withSubpackages="true" />
-        </value>
-      </option>
       <option name="CODE_STYLE_DEFAULTS" value="KOTLIN_OFFICIAL" />
     </JetCodeStyleSettings>
     <codeStyleSettings language="XML">
Index: app/src/main/java/com/rudra/imagesearchapp/di/AppModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/di/AppModule.kt	(date 1630054771794)
+++ app/src/main/java/com/rudra/imagesearchapp/di/AppModule.kt	(date 1630054771794)
@@ -0,0 +1,28 @@
+package com.rudra.imagesearchapp.di
+
+import com.rudra.imagesearchapp.api.UnsplashApi
+import dagger.Module
+import dagger.Provides
+import dagger.hilt.InstallIn
+import dagger.hilt.android.components.ApplicationComponent
+import retrofit2.Retrofit
+import retrofit2.converter.gson.GsonConverterFactory
+import javax.inject.Singleton
+
+@Module
+@InstallIn(ApplicationComponent::class)
+object AppModule {
+
+    @Provides
+    @Singleton
+    fun provideRetrofit(): Retrofit =
+        Retrofit.Builder()
+            .baseUrl(UnsplashApi.BASE_URL)
+            .addConverterFactory(GsonConverterFactory.create())
+            .build()
+
+    @Provides
+    @Singleton
+    fun providesUnsplashApi(retrofit: Retrofit): UnsplashApi =
+        retrofit.create(UnsplashApi::class.java)
+}
\ No newline at end of file
Index: app/src/main/java/com/rudra/imagesearchapp/data/UnsplashPhoto.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/data/UnsplashPhoto.kt	(date 1630057368530)
+++ app/src/main/java/com/rudra/imagesearchapp/data/UnsplashPhoto.kt	(date 1630057368530)
@@ -0,0 +1,30 @@
+package com.rudra.imagesearchapp.data
+
+import android.os.Parcelable
+import kotlinx.android.parcel.Parcelize
+
+@Parcelize
+data class UnsplashPhoto(
+    val id: String,
+    val description: String?,
+    val urls: UnsplashPhotoUrls,
+    val user: UnsplashUser
+) : Parcelable {
+
+    @Parcelize
+    data class UnsplashPhotoUrls(
+        val raw: String,
+        val full: String,
+        val regular: String,
+        val small: String,
+        val thumb: String,
+    ) : Parcelable
+
+    @Parcelize
+    data class UnsplashUser(
+        val name: String,
+        val username: String
+    ) : Parcelable {
+        val attributionUrl get() = "https://unsplash.com/$username?utm_source=ImageSearchApp&utm_medium=referral"
+    }
+}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ .idea/misc.xml	(date 1630057159921)
@@ -5,7 +5,7 @@
       <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
     </configurations>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="false" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/com/rudra/imagesearchapp/ui/gallery/GalleryFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/ui/gallery/GalleryFragment.kt	(date 1630062750806)
+++ app/src/main/java/com/rudra/imagesearchapp/ui/gallery/GalleryFragment.kt	(date 1630062750806)
@@ -0,0 +1,110 @@
+package com.rudra.imagesearchapp.ui.gallery
+
+import android.os.Bundle
+import android.view.Menu
+import android.view.MenuInflater
+import android.view.View
+import androidx.appcompat.widget.SearchView
+import androidx.core.view.isVisible
+import androidx.fragment.app.Fragment
+import androidx.fragment.app.viewModels
+import androidx.navigation.fragment.findNavController
+import androidx.paging.LoadState
+import com.rudra.imagesearchapp.R
+import com.rudra.imagesearchapp.data.UnsplashPhoto
+import com.rudra.imagesearchapp.databinding.FragmentGalleryBinding
+import com.rudra.imagesearchapp.databinding.UnsplashPhotoLoadStateFooterBinding
+import dagger.hilt.android.AndroidEntryPoint
+
+@AndroidEntryPoint
+class GalleryFragment : Fragment(R.layout.fragment_gallery), UnsplashPhotoAdapter.OnItemClickListener {
+
+    private val viewModel by viewModels<GalleryViewModel>()
+
+    private var _binding: FragmentGalleryBinding? = null
+    private val binding get() = _binding!!
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        _binding = FragmentGalleryBinding.bind(view)
+
+        val adapter = UnsplashPhotoAdapter(this)
+
+        binding.apply {
+            recyclerView.setHasFixedSize(true)
+            recyclerView.itemAnimator = null
+            recyclerView.adapter = adapter.withLoadStateHeaderAndFooter(
+                header = UnsplashPhotoLoadStateAdapter { adapter.retry() },
+                footer = UnsplashPhotoLoadStateAdapter { adapter.retry() }
+            )
+
+            buttonRetry.setOnClickListener{
+                adapter.retry()
+            }
+        }
+
+        viewModel.photos.observe(viewLifecycleOwner) {
+            adapter.submitData(viewLifecycleOwner.lifecycle, it)
+        }
+
+
+        adapter.addLoadStateListener { loadState ->
+            binding.apply {
+                progressBar.isVisible = loadState.source.refresh is LoadState.Loading
+                recyclerView.isVisible = loadState.source.refresh is LoadState.NotLoading
+                buttonRetry.isVisible = loadState.source.refresh is LoadState.Error
+                textViewError.isVisible = loadState.source.refresh is LoadState.Error
+
+                //empty view
+                if ( loadState.source.refresh is LoadState.NotLoading &&
+                        loadState.append.endOfPaginationReached &&
+                        adapter.itemCount < 1) {
+                    recyclerView.isVisible = false
+                    textViewEmpty.isVisible = true
+                } else {
+                    textViewEmpty.isVisible = false
+                }
+            }
+        }
+
+        setHasOptionsMenu(true)
+    }
+
+    override fun onItemClick(photo: UnsplashPhoto) {
+        val action = GalleryFragmentDirections.actionGalleryFragment2ToDetailsFragment(photo)
+        findNavController().navigate(action)
+    }
+
+    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {
+        super.onCreateOptionsMenu(menu, inflater)
+
+        inflater.inflate(R.menu.menu_gallery, menu)
+
+        val searchItem = menu.findItem(R.id.action_search)
+        val searchView = searchItem.actionView as SearchView
+
+        searchView.setOnQueryTextListener( object : SearchView.OnQueryTextListener{
+            override fun onQueryTextSubmit(query: String?): Boolean {
+                if (query != null) {
+                    binding.recyclerView.scrollToPosition(0)
+                    viewModel.searchPhotos(query)
+                    searchView.clearFocus()
+                }
+                return true
+            }
+
+            override fun onQueryTextChange(newText: String?): Boolean {
+                return true
+            }
+
+        })
+
+
+    }
+
+    override fun onDestroyView() {
+        super.onDestroyView()
+        _binding = null
+    }
+}
\ No newline at end of file
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Project-wide Gradle settings.\r\n# IDE (e.g. Android Studio) users:\r\n# Gradle settings configured through the IDE *will override*\r\n# any settings specified in this file.\r\n# For more details on how to configure your build environment visit\r\n# http://www.gradle.org/docs/current/userguide/build_environment.html\r\n# Specifies the JVM arguments used for the daemon process.\r\n# The setting is particularly useful for tweaking memory settings.\r\norg.gradle.jvmargs=-Xmx2048m\r\n# When configured, Gradle will run in incubating parallel mode.\r\n# This option should only be used with decoupled projects. More details, visit\r\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\r\n# org.gradle.parallel=true\r\n# AndroidX package structure to make it clearer which packages are bundled with the\r\n# Android operating system, and which are packaged with your app\"s APK\r\n# https://developer.android.com/topic/libraries/support-library/androidx-rn\r\nandroid.useAndroidX=true\r\n# Automatically convert third-party libraries to use AndroidX\r\nandroid.enableJetifier=true\r\n# Kotlin code style for this project: \"official\" or \"obsolete\":\r\nkotlin.code.style=official
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle.properties	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ gradle.properties	(date 1630057160016)
@@ -18,4 +18,5 @@
 # Automatically convert third-party libraries to use AndroidX
 android.enableJetifier=true
 # Kotlin code style for this project: "official" or "obsolete":
-kotlin.code.style=official
\ No newline at end of file
+kotlin.code.style=official
+unsplash_access_key="ORYPfV2nKzb7sq68wmjNtNcJ1l5nBafbvKNBdTNMsT0"
\ No newline at end of file
Index: app/src/main/java/com/rudra/imagesearchapp/api/UnsplashResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/api/UnsplashResponse.kt	(date 1630054772023)
+++ app/src/main/java/com/rudra/imagesearchapp/api/UnsplashResponse.kt	(date 1630054772023)
@@ -0,0 +1,7 @@
+package com.rudra.imagesearchapp.api
+
+import com.rudra.imagesearchapp.data.UnsplashPhoto
+
+data class UnsplashResponse (
+    val results: List<UnsplashPhoto>
+)
\ No newline at end of file
Index: app/src/main/java/com/rudra/imagesearchapp/data/UnsplashPagingSource.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/data/UnsplashPagingSource.kt	(date 1630054772064)
+++ app/src/main/java/com/rudra/imagesearchapp/data/UnsplashPagingSource.kt	(date 1630054772064)
@@ -0,0 +1,32 @@
+package com.rudra.imagesearchapp.data
+
+import androidx.paging.PagingSource
+import com.rudra.imagesearchapp.api.UnsplashApi
+import retrofit2.HttpException
+import java.io.IOException
+
+private const val UNSPLASH_STARTING_PAGE_INDEX = 1
+
+class UnsplashPagingSource(
+    private val unsplashApi: UnsplashApi,
+    private val query: String
+) : PagingSource<Int, UnsplashPhoto> () {
+    override suspend fun load(params: LoadParams<Int>): LoadResult<Int, UnsplashPhoto> {
+        val position = params.key ?: UNSPLASH_STARTING_PAGE_INDEX
+
+        return try {
+            val response = unsplashApi.searchPhotos(query, position, params.loadSize)
+            val photos = response.results
+
+                LoadResult.Page(
+                    data = photos,
+                    prevKey = if (position == UNSPLASH_STARTING_PAGE_INDEX) null else position - 1,
+                    nextKey = if (photos.isEmpty()) null else position + 1
+                )
+        } catch (exception: IOException){
+            LoadResult.Error(exception)
+        } catch (exception: HttpException){
+            LoadResult.Error(exception)
+        }
+    }
+}
\ No newline at end of file
Index: app/src/androidTest/java/com/codinginflow/imagesearchapp/ExampleInstrumentedTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.codinginflow.imagesearchapp\r\n\r\nimport androidx.test.platform.app.InstrumentationRegistry\r\nimport androidx.test.ext.junit.runners.AndroidJUnit4\r\n\r\nimport org.junit.Test\r\nimport org.junit.runner.RunWith\r\n\r\nimport org.junit.Assert.*\r\n\r\n/**\r\n * Instrumented test, which will execute on an Android device.\r\n *\r\n * See [testing documentation](http://d.android.com/tools/testing).\r\n */\r\n@RunWith(AndroidJUnit4::class)\r\nclass ExampleInstrumentedTest {\r\n    @Test\r\n    fun useAppContext() {\r\n        // Context of the app under test.\r\n        val appContext = InstrumentationRegistry.getInstrumentation().targetContext\r\n        assertEquals(\"com.codinginflow.imagesearchapp\", appContext.packageName)\r\n    }\r\n}
===================================================================
--- app/src/androidTest/java/com/codinginflow/imagesearchapp/ExampleInstrumentedTest.kt	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ app/src/androidTest/java/com/rudra/imagesearchapp/ExampleInstrumentedTest.kt	(date 1630057160302)
@@ -1,4 +1,4 @@
-package com.codinginflow.imagesearchapp
+package com.rudra.imagesearchapp
 
 import androidx.test.platform.app.InstrumentationRegistry
 import androidx.test.ext.junit.runners.AndroidJUnit4
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ .idea/vcs.xml	(date 1630064226658)
@@ -2,5 +2,6 @@
 <project version="4">
   <component name="VcsDirectoryMappings">
     <mapping directory="" vcs="Git" />
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/test/java/com/codinginflow/imagesearchapp/ExampleUnitTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.codinginflow.imagesearchapp\r\n\r\nimport org.junit.Test\r\n\r\nimport org.junit.Assert.*\r\n\r\n/**\r\n * Example local unit test, which will execute on the development machine (host).\r\n *\r\n * See [testing documentation](http://d.android.com/tools/testing).\r\n */\r\nclass ExampleUnitTest {\r\n    @Test\r\n    fun addition_isCorrect() {\r\n        assertEquals(4, 2 + 2)\r\n    }\r\n}
===================================================================
--- app/src/test/java/com/codinginflow/imagesearchapp/ExampleUnitTest.kt	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ app/src/test/java/com/rudra/imagesearchapp/ExampleUnitTest.kt	(date 1630057160277)
@@ -1,4 +1,4 @@
-package com.codinginflow.imagesearchapp
+package com.rudra.imagesearchapp
 
 import org.junit.Test
 
Index: app/src/main/java/com/rudra/imagesearchapp/ImageSearchApplication.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/ImageSearchApplication.kt	(date 1630054772342)
+++ app/src/main/java/com/rudra/imagesearchapp/ImageSearchApplication.kt	(date 1630054772342)
@@ -0,0 +1,9 @@
+package com.rudra.imagesearchapp
+
+import android.app.Application
+import dagger.hilt.android.HiltAndroidApp
+
+@HiltAndroidApp
+class ImageSearchApplication : Application(){
+
+}
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1630057159992)
+++ .idea/compiler.xml	(date 1630057159992)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="11" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/rudra/imagesearchapp/ui/gallery/GalleryViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/ui/gallery/GalleryViewModel.kt	(date 1630064044296)
+++ app/src/main/java/com/rudra/imagesearchapp/ui/gallery/GalleryViewModel.kt	(date 1630064044296)
@@ -0,0 +1,27 @@
+package com.rudra.imagesearchapp.ui.gallery
+
+import androidx.hilt.Assisted
+import androidx.hilt.lifecycle.ViewModelInject
+import androidx.lifecycle.*
+import androidx.paging.cachedIn
+import com.rudra.imagesearchapp.data.UnsplashRepository
+
+class GalleryViewModel @ViewModelInject constructor(
+    private val  repository: UnsplashRepository,
+    @Assisted state: SavedStateHandle
+    ): ViewModel() {
+
+    private val currentQuery = state.getLiveData(CURRENT_QUERY, DEFAULT_QUERY)
+    val photos = currentQuery.switchMap { queryString ->
+        repository.getSearchResults(queryString).cachedIn(viewModelScope)
+    }
+
+    fun searchPhotos(query: String) {
+        currentQuery.value = query
+    }
+
+    companion object {
+        private const val CURRENT_QUERY = "current_query"
+        private const val DEFAULT_QUERY = "Rudra"
+    }
+}
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunConfigurationProducerService\">\r\n    <option name=\"ignoredProducers\">\r\n      <set>\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision 485363e59fec316de684da336291ab0aa02901a7)
+++ .idea/runConfigurations.xml	(date 1630057160055)
@@ -3,6 +3,7 @@
   <component name="RunConfigurationProducerService">
     <option name="ignoredProducers">
       <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
Index: app/src/main/java/com/rudra/imagesearchapp/ui/gallery/UnsplashPhotoLoadStateAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/rudra/imagesearchapp/ui/gallery/UnsplashPhotoLoadStateAdapter.kt	(date 1630059401611)
+++ app/src/main/java/com/rudra/imagesearchapp/ui/gallery/UnsplashPhotoLoadStateAdapter.kt	(date 1630059401611)
@@ -0,0 +1,44 @@
+package com.rudra.imagesearchapp.ui.gallery
+
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.core.view.isVisible
+import androidx.paging.LoadState
+import androidx.paging.LoadStateAdapter
+import androidx.recyclerview.widget.RecyclerView
+import com.rudra.imagesearchapp.databinding.UnsplashPhotoLoadStateFooterBinding
+
+class UnsplashPhotoLoadStateAdapter(private val retry: () -> Unit) :
+    LoadStateAdapter<UnsplashPhotoLoadStateAdapter.LoadStateViewHolder>() {
+
+    override fun onCreateViewHolder(parent: ViewGroup, loadState: LoadState): LoadStateViewHolder {
+        val binding = UnsplashPhotoLoadStateFooterBinding.inflate(
+            LayoutInflater.from(parent.context),
+            parent,
+            false
+        )
+        return LoadStateViewHolder(binding)
+    }
+
+    override fun onBindViewHolder(holder: LoadStateViewHolder, loadState: LoadState) {
+        holder.bind(loadState)
+    }
+
+    inner class LoadStateViewHolder(private val binding: UnsplashPhotoLoadStateFooterBinding) :
+        RecyclerView.ViewHolder(binding.root) {
+
+        init {
+            binding.buttonRetry.setOnClickListener{
+                retry.invoke()
+            }
+        }
+            fun bind(loadState: LoadState){
+                binding.apply {
+                    progressBar.isVisible = loadState is LoadState.Loading
+                    buttonRetry.isVisible = loadState !is LoadState.Loading
+                    textViewError.isVisible = loadState !is LoadState.Loading
+                }
+            }
+    }
+
+}
\ No newline at end of file
